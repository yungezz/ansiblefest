- hosts: localhost
  connection: local
  vars:
    repo_url: "https://github.com/Azure-Samples/aci-helloworld.git"
    workspace: ~/src/aci-helloworld

  roles:
    - Azure.azure_preview_modules
  
  tasks:
  - name: create an azure web app
    docker_image:
        name: undefined # required. Image name. Name format will be one of: name, repository/name, registry_server:port/name. When pushing or pulling an image the name can optionally include the tag by appending ':tag_name'.
        archive_path: undefined # not required. Use with state C(present) to archive an image to a .tar file.
        cacert_path: undefined # not required. Use a CA certificate when performing server verification by providing the path to a CA certificate file.
        force: false # not required. Use with state I(absent) to un-tag and remove all images matching the specified name. Use with state C(present) to build, load or pull an image when the image already exists.
        timeout: 60 # not required. The maximum amount of time in seconds to wait on a response from the API.
        repository: undefined # not required. Full path to a repository. Use with state C(present) to tag the image into the repository. Expects format I(repository:tag). If no tag is provided, will use the value of the C(tag) parameter or I(latest).
        tls_hostname: localhost # not required. When verifying the authenticity of the Docker Host server, provide the expected name of the server.
        docker_host: unix://var/run/docker.sock # not required. The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.0.2.23:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'.
        tag: latest # not required. Used to select an image when pulling. Will be added to the image when pushing, tagging or building. Defaults to I(latest).,If C(name) parameter format is I(name:tag), then tag value from C(name) will take precedence.
        cert_path: undefined # not required. Path to the client's TLS certificate file.
        path: undefined # not required. Use with state 'present' to build an image. Will be the path to a directory containing the context and Dockerfile for building an image.
        tls: false # not required. Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server.
        pull: true # not required. When building an image downloads any updates to the FROM image in Dockerfile.
        nocache: false # not required. Do not use cache when building an image.
        container_limits: undefined # not required. A dictionary of limits applied to each container created by the build process.
        http_timeout: undefined # not required. Timeout for HTTP requests during the image build operation. Provide a positive integer value for the number of seconds.
        ssl_version: 1.0 # not required. Provide a valid SSL version number. Default value determined by docker-py, currently 1.0.
        debug: false # not required. Debug mode
        load_path: undefined # not required. Use with state C(present) to load an image from a .tar file.
        use_tls: no # not required. choices: no;encrypt;verify. DEPRECATED. Whether to use tls to connect to the docker server. Set to C(no) when TLS will not be used. Set to C(encrypt) to use TLS. And set to C(verify) to use TLS and verify that the server's certificate is valid for the server. NOTE: If you specify this option, it will set the value of the tls or tls_verify parameters.
        state: absent # not required. choices: absent;present;build. Make assertions about the state of an image.,When C(absent) an image will be removed. Use the force option to un-tag and remove all images matching the provided name.,When C(present) check if an image exists using the provided name and tag. If the image is not found or the force option is used, the image will either be pulled, built or loaded. By default the image will be pulled from Docker Hub. To build the image, provide a path value set to a directory containing a context and Dockerfile. To load an image, specify load_path to provide a path to an archive file. To tag an image to a repository, provide a repository path. If the name contains a repository path, it will be pushed.,NOTE: C(build) is DEPRECATED and will be removed in release 2.3. Specifying C(build) will behave the same as C(present).
        tls_verify: false # not required. Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.
        key_path: undefined # not required. Path to the client's TLS key file.
        buildargs: undefined # not required. Provide a dictionary of C(key:value) build arguments that map to Dockerfile ARG directive.,Docker expects the value to be a string. For convenience any non-string values will be converted to strings.,Requires Docker API >= 1.21 and docker-py >= 1.7.0.
        push: false # not required. Push the image to the registry. Specify the registry as part of the I(name) or I(repository) parameter.
        rm: true # not required. Remove intermediate containers after build.
        dockerfile: undefined # not required. Use with state C(present) to provide an alternate name for the Dockerfile to use when building an image.
        api_version: auto # not required. The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py.